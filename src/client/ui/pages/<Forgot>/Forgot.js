/* ------------------------------------------------------------------------------------------------===== FORGOT WORFLOW =====0: EMAIL (prepopulate with signin.email)    isRegistered ?    - false: error    - true: continue1: PASSWORD (new)    sendEmail (forgotToken)3: TOKEN    - ko: error    - ok: setPassword => Dashboard!-------------------------------------------------------------------------------------------------*/import _ from '@jmaguirrei/belt';import { ui } from '/client/context';import Email from './<>/Email';import Password from './<>/Password';import Token from './<>/Token';/* --------------------------------------------------------------------------------------------- */const { Carrousel, Navigation } = ui.components;const { Header, Tabs } = ui.fragments;const screens = [ Email, Password, Token ];const numSteps = screens.length;/* --------------------------------------------------------------------------------------------- */export const ForgotControl = store => {  const language = store.get('language');  const currentStep = store.get('forgot.currentStep');  const currentCheck = _.get({    0: store.check('email', store.get('signin.email')),    1: store.check('password', store.get('forgot.password')),    2: { result: store.get('forgot.tokenDigits').length === 6 },  }, currentStep, {});  const checkResult = _.get(currentCheck, 'result', false);  const alert = store.alerts.find(item => item.isVisible);  return {    state: {      currentStep,      leftEnabled: currentStep > 0,      rightEnabled: checkResult,      checkText: _.get(currentCheck, `message.${language}`, ''),      alertText: _.get(alert, `message.${language}`, ''),    },    actions: {      onClickLeft: () => {        // const currentStep = store.get('forgot.currentStep');        if (currentStep > 0) store.set({ 'forgot.currentStep': currentStep - 1 });      },      onClickRight: () => {        // const currentStep = store.get('forgot.currentStep');        if (currentStep === 0) store.call('forgotEmail');        if (currentStep === 1) store.call('forgotPassword');        if (currentStep === 2) store.call('forgotToken');      },    },  };};/* --------------------------------------------------------------------------------------------- */export default ui.hoc({  state(props, store) {    return ForgotControl(store).state;  },  actions(props, store) {    return ForgotControl(store).actions;  },  classes: {    container: `      display: flex;      flex-flow: column;      justify-content: space-around;      height: 100%;      position: relative;    `,  },  render({ state, actions, classes }) {    const { currentStep, leftEnabled, rightEnabled, checkText, alertText } = state;    const { onClickLeft, onClickRight } = actions;    return ui.html`      <div id='forgot' class=${classes.container}>        ${Header({ numSteps, currentStep })}        ${Carrousel({ currentStep, screens })}        ${Navigation({          currentPage: 'forgot',          onClickLeft,          onClickRight,          leftEnabled,          rightEnabled,          text: alertText || checkText,          color: alertText ? ui.lib.Colors.RED_WARNING : '',        })}        ${Tabs()}      </div>    `;  }});